# /etc/conf.d/iptables
#systemctl enable iptables
#iptables-restore </etc/iptables/iptables.rules

# flush and reset iptables to default
#iptables -P INPUT ACCEPT
#iptables -P FORWARD ACCEPT
#iptables -P OUTPUT ACCEPT
#iptables -F
#iptables -X

# prevent spoofing
#net.ipv4.conf.all.rp_filter=1


*filter

# allow all loopback traffic and drop all traffic to 127/8 that doesnt use lo
-A INPUT  -i lo -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT
-A OUTPUT -o lo -s 127.0.0.1 -d 127.0.0.1 -j ACCEPT

# accept all established inbound connections
-A INPUT -m conntrack --ctstate ESTABLISHED,RELATED -j ACCEPT

# drop invalid packets
-A INPUT -p tcp ! --syn -m conntrack --ctstate NEW -j DROP
-A INPUT -m conntrack --ctstate INVALID -j DROP
-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,PSH,ACK,URG NONE -j DROP
-A INPUT -p tcp -m tcp --tcp-flags SYN,FIN SYN,FIN              -j DROP
-A INPUT -p tcp -m tcp --tcp-flags SYN,RST SYN,RST              -j DROP
-A INPUT -p tcp -m tcp --tcp-flags FIN,RST FIN,RST              -j DROP
-A INPUT -p tcp -m tcp --tcp-flags ACK,FIN FIN                  -j DROP
-A INPUT -p tcp -m tcp --tcp-flags ACK,URG URG                  -j DROP

-A INPUT -p udp -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -j REJECT --reject-with tcp-reset
-A INPUT        -j REJECT --reject-with icmp-proto-unreachable

# drop broadcasts to 224.0.0.1
-A INPUT -s 224.0.0.0/4 -j DROP
-A INPUT -d 224.0.0.0/4 -j DROP
-A INPUT -s 240.0.0.0/5 -j DROP

# drop private addresses on public interface
-A INPUT -i eth0 -s 10.0.0.0/8     -j DROP
-A INPUT -i eth0 -s 172.16.0.0/12  -j DROP
-A INPUT -i eth0 -s 192.168.0.0/16 -j DROP
-A INPUT -i eth0 -s 224.0.0.0/4    -j DROP 
-A INPUT -i eth0 -s 240.0.0.0/5    -j DROP
-A INPUT -i eth0 -s 127.0.0.0/8    -j DROP

# allow outbound. keep state so outbound connections can receive a reply
-A INPUT  -p tcp -m conntrack --ctstate ESTABLISHED     -j ACCEPT
-A OUTPUT -p tcp -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT
-A INPUT  -p udp -m conntrack --ctstate ESTABLISHED     -j ACCEPT
-A OUTPUT -p udp -m conntrack --ctstate NEW,ESTABLISHED -j ACCEPT

# allow ping in
-A INPUT  -p icmp -m conntrack --ctstate NEW,ESTABLISHED --icmp-type echo-request -j ACCEPT
-A OUTPUT -p icmp -m conntrack --ctstate NEW,ESTABLISHED --icmp-type echo-reply   -j ACCEPT

##
# This is where you start modifying this to only allow certain traffic
##

# allow HTTP and HTTPS connections from anywhere
-A INPUT -p tcp --dport 80  -j ACCEPT
-A INPUT -p tcp --dport 443 -j ACCEPT

# allow ssh from any ip
-A INPUT -p tcp -m conntrack --ctstate NEW,ESTABLISHED,RELATED --dport 22 -j ACCEPT
# or from an ip range
#-A INPUT -p tcp -m iprange --src-range x.x.x.x-y.y.y.y -m tcp --dport 22 -m conntrack --ctstate NEW,ESTABLISHED,RELATED -j ACCEPT

# prevent ssh bruteforcing
-A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW -m recent --set --name SSH
-A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW -m recent --update --seconds 60 --hitcount 4 --rttl --name SSH -j LOG --log-prefix "sshd_brute_force_block "
-A INPUT -p tcp --dport 22 -m conntrack --ctstate NEW -m recent --update --seconds 60 --hitcount 4 --rttl --name SSH -j DROP

# log and drop everything else coming in
-A INPUT  -m limit --limit 5/m --limit-burst 10 -j LOG --log-prefix "iptables denied: "
-A OUTPUT -m limit --limit 1/m --limit-burst 5  -j LOG --log-prefix "iptables accept: "
-A INPUT -j DROP
-A FORWARD -j DROP
-A OUTPUT -j ACCEPT

COMMIT
